# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# read more about configuring hatch at:
# https://hatch.pypa.io/latest/config/build/
[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

# https://peps.python.org/pep-0621/
[project]
name = "leopard_em"
dynamic = ["version"]
description = "Location & Orientation of Particles using Two-Dimensional Template Matching"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "BSD-3-Clause" }
authors = [
    { name = "Josh Dickerson", email = "jdickerson@berkeley.edu" },
    { name = "Matthew Giammar", email = "matthew_giammar@berkeley.edu" },
]
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
# add your package dependencies here
dependencies = [
    "torch",
    "einops",
    "numpy",
    "pandas",
    "mrcfile",
    "pydantic",
    "pyyaml",
    "types-PyYAML",
    "roma",
    "tqdm",
    "torch-fourier-slice>=v0.2.0",
    "torch-fourier-filter>=v0.2.3",
    "torch-so3>=v0.2.0",
    "ttsim3d>=v0.3.0",
    "lmfit",
]

[tool.hatch.metadata]
allow-direct-references = true

# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
# "extras" (e.g. for `pip install .[test]`)
[project.optional-dependencies]
# Dependencies for running tests
test = ["pytest", "pytest-cov"]
# Development dependencies
dev = [
    "ipython",
    "mypy",
    "pdbpp",      # https://github.com/pdbpp/pdbpp
    "pre-commit",
    "rich",       # https://github.com/Textualize/rich
    "ruff",
    "pylint",
]
# Documentation dependencies
docs = [
    "python-markdown-math",
    "mkdocs",
    "mkdocs-material",
    "mkdocs-jupyter",
    "mkdocs-inline-select-svg-plugin",
    "mkdocs-autorefs",
    "mkdocs-autoapi",
    "mkdocstrings[python]",
    "mkdocs-gallery",
]
# Optional experimental vkdispatch backend
vkdispatch = [
    "vkdispatch==0.0.24"
]

[project.urls]
homepage = "https://github.com/Lucaslab-Berkeley/Leopard-EM"
repository = "https://github.com/Lucaslab-Berkeley/Leopard-EM"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
# same as console_scripts entry point
# [project.scripts]
# match-template-cli = "leopard_em:programs:match_template:main_cli"
# refine-template-cli = "leopard_em:programs:refine_template:main_cli"

# https://docs.astral.sh/ruff
[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src"]

# https://docs.astral.sh/ruff/rules
[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "D417", # Missing argument descriptions in Docstrings
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
]
ignore = [
    "D401", # First line should be in imperative mood (remove to opt in)
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]
"tests/pydantic_models/test_basic_imports.py" = ["F401"]

# https://docs.astral.sh/ruff/formatter/
[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = false # default is false

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

# # module specific overrides
# [[tool.mypy.overrides]]
# module = ["numpy.*",]
# ignore_errors = true

# https://docs.pytest.org/
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://coverage.readthedocs.io/
[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
    "pass",
]

[tool.coverage.run]
source = ["/src/leopard-em"]

# https://github.com/mgedmin/check-manifest#configuration
# add files that you want check-manifest to explicitly ignore here
# (files that are in the repo but shouldn't go in the package)
[tool.check-manifest]
ignore = [".pre-commit-config.yaml", ".ruff_cache/**/*", "tests/**/*"]
